[
  {
    "id": "R2-001",
    "title": "Cloudflare R2 File Service Hardening",
    "objective": "Configure S3 driver with R2 endpoint/forcePathStyle, add signed URL uploads and background image optimization",
    "evidence": ["medusa/medusa-config.ts", "medusa/src/scripts/test-image-upload.ts"],
    "effort": "M",
    "rice": 60,
    "metrics": {"media_via_r2_rate": 1.0, "p95_pdp_image_ms": 200},
    "exit_criteria": ["100% uploads/read via R2", "optimizer worker deployed"]
  },
  {
    "id": "CHK-001",
    "title": "Idempotent Checkout & Payments",
    "objective": "Migrate to Medusa carts/orders with idempotency keys; add Stripe webhook verification and retries with backoff",
    "evidence": ["frontend/experiences/fabric-store/app/api/create-payment-intent/route.ts", "frontend/experiences/fabric-store/app/api/orders/route.ts", "medusa/medusa-config.ts"],
    "effort": "M",
    "rice": 72,
    "metrics": {"duplicate_orders": 0, "failed_order_rate": 0.01},
    "exit_criteria": ["webhook handler live", "file-based orders removed"]
  },
  {
    "id": "CHN-001",
    "title": "Sales Channels as Tenant Boundary",
    "objective": "Model partners as sales channels; scope catalog/cart/order to channels; admin role guards",
    "evidence": ["medusa/medusa-config.ts"],
    "effort": "M",
    "rice": 64,
    "metrics": {"cross_channel_leaks": 0},
    "exit_criteria": ["channel-scoped queries", "tests pass for isolation"]
  },
  {
    "id": "PRC-001",
    "title": "B2B Pricing via Price Lists & Customer Groups",
    "objective": "Implement tiered pricing attached to channels and groups, surfaced on PLP/PDP and honored in cart",
    "evidence": ["frontend/experiences/fabric-store/lib/medusa-api.ts", "medusa/medusa-config.ts"],
    "effort": "M",
    "rice": 58,
    "metrics": {"conv_lift_pct": 0.05, "margin_lift_pct": 0.03},
    "exit_criteria": ["3 price list scenarios live", "group pricing validated"]
  },
  {
    "id": "INV-001",
    "title": "Inventory with Stock Locations & Reservations",
    "objective": "Enable inventory module, define locations, reservation on cart add with auto-release",
    "evidence": ["medusa/medusa-config.ts"],
    "effort": "M-L",
    "rice": 55,
    "metrics": {"oversell_incidents": 0},
    "exit_criteria": ["reservation watchdog", "location stock accurate on PDP"]
  },
  {
    "id": "PRM-001",
    "title": "Promotions/Discounts Engine Hardening",
    "objective": "Configure stacking rules, exclusions, schedules, and affiliate codes",
    "evidence": ["medusa/medusa-config.ts"],
    "effort": "M",
    "rice": 48,
    "metrics": {"promo_defects": 0},
    "exit_criteria": ["promotion matrix tests green"]
  },
  {
    "id": "FUL-001",
    "title": "Fulfillment Provider Abstraction",
    "objective": "Add shipping options/rates; implement returns/claims workflows with exchanges",
    "evidence": ["medusa/medusa-config.ts"],
    "effort": "M",
    "rice": 46,
    "metrics": {"return_to_exchange_success": 1.0},
    "exit_criteria": ["labels generated", "exchange flow verified"]
  },
  {
    "id": "OBS-001",
    "title": "Observability v1",
    "objective": "Structured logs with correlation IDs, OTEL traces/metrics, dashboards and alerts",
    "evidence": ["medusa/medusa-config.ts", "frontend/experiences/fabric-store/app/*"],
    "effort": "S",
    "rice": 52,
    "metrics": {"p95_add_to_cart_ms": 150, "p95_checkout_write_ms": 900, "error_rate": 0.01},
    "exit_criteria": ["dashboards live", "on-call alerts configured"]
  },
  {
    "id": "SFR-001",
    "title": "Storefront Data-Fetching Discipline",
    "objective": "Adopt SSR/ISR where appropriate, cache keys, avoid over-fetching, add PDP schema markup",
    "evidence": ["frontend/experiences/fabric-store/lib/medusa-api.ts", "frontend/experiences/fabric-store/app/*"],
    "effort": "M",
    "rice": 44,
    "metrics": {"lighthouse_pdp": 90, "ttfb_ms": 200},
    "exit_criteria": ["Lighthouse â‰¥90 PDP/PLP", "TTFB within SLO"]
  },
  {
    "id": "SEC-001",
    "title": "Security & Secrets Hygiene",
    "objective": "Tighten CORS, input validation, rate limits; secret scanning and env separation",
    "evidence": ["medusa/medusa-config.ts"],
    "effort": "S",
    "rice": 50,
    "metrics": {"security_findings": 0},
    "exit_criteria": ["baseline scan clean", "pen-test checklist closed"]
  }
]
